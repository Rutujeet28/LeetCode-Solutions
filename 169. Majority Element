class Solution {
public:
    int majorityElement(vector<int>& nums) {
        unordered_map<int,int> uMap;

        for(auto i: nums)
        {
            uMap[i]++;
        }
        int maxVal = 0;
        int majorityElement = 0;
        vector<int> freq;
        for(auto& entry: uMap)
        {
           if(entry.second>maxVal)
           {
            maxVal = entry.second;
            majorityElement = entry.first;
           }
        }
        return majorityElement;
    }
};



## Boyer-Moore Algorithm

class Solution {
    public int majorityElement(int[] nums) {
        int val = 0;
        int count = 0;
        
        for(int num :  nums){
            if(count == 0){
                val = num;
            }
            count += (num == val) ? 1 : -1;
        }

        return val;

    }
}
